
coordinates velocity {temp}

msld nblocks {nblocks}

variables set prevblock 0
variables set ii 1
! ii -> site 
while <= {ii} {nsites}
   variables set jj 1
   ! jj -> substituent 
   while <= {jj} {nsubs{ii}}
      variables calculate jp0 int + {jj} {prevblock}

      msld call {jp0} site{ii}sub{jj}

      variables calculate jj int + {jj} 1
   endwhile
   variables calculate prevblock int + {prevblock} {nsubs{ii}}
   variables calculate ii int + {ii} 1
endwhile

!               B S   t0  tv  tm  fb   q
   msld initialize 0 0 0 0 5 0 0

variables set blockassign 0
variables set prevblock 0
variables set ii 1
while <= {ii} {nsites}
   variables set jj 1
   variables set theta0 1
   while <= {jj} {nsubs{ii}}
      variables calculate jp0 int + {jj} {prevblock}

!               B S   t0  tv  tm  fb   q
      msld initialize {jp0} {ii} {theta0} 0 5 {lams{ii}s{jj}} 0

      ! variables set theta0 -1 ! start all equal
      variables calculate jj int + {jj} 1
   endwhile
   variables calculate prevblock int + {prevblock} {nsubs{ii}}
   variables calculate ii int + {ii} 1
endwhile
   msld removescaling bond urey angle dihe impr 

   msld softcore on
   msld softcore14 off
   ! pmel ex ! msld ewaldtype 2 ! default

variables set prevblock 0
variables set ii 1
while <= {ii} {nsites}
   variables set jj 1
   while <= {jj} {nsubs{ii}}     ! jj and kk specify the substituents 
      variables calculate jp0 int + {jj} {prevblock}
      variables calculate kk int + {jj} 1
      while <= {kk} {nsubs{ii}}
         variables calculate kp0 int + {kk} {prevblock}
         ! put bias potentials here (see manual https://github.com/RyanLeeHayes/BLaDE/blob/master/doc/MAIN.txt )
         ! msld bias lambda1 lambda2 type const coef power 
         !  
         msld bias {jp0} {kp0} 6 0.0 {cs{ii}s{jj}s{ii}s{kk}} 0
         msld bias {jp0} {kp0} 10 -5.56 {xs{ii}s{jj}s{ii}s{kk}} 0
         msld bias {jp0} {kp0} 8 0.017 {ss{ii}s{jj}s{ii}s{kk}} 0
         msld bias {kp0} {jp0} 10 -5.56 {xs{ii}s{kk}s{ii}s{jj}} 0
         msld bias {kp0} {jp0} 8 0.017 {ss{ii}s{kk}s{ii}s{jj}} 0
         variables calculate kk int + {kk} 1
      endwhile
      variables calculate jj int + {jj} 1
   endwhile
   variables calculate prevblock int + {prevblock} {nsubs{ii}}
   variables calculate ii int + {ii} 1
endwhile
